<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="TINYINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUserName" parameterType="java.lang.String" >
    delete from user_test
    where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.User" >
    insert into user_test (user_name, passwd,
      `role`)
    values (#{userName,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR},
      #{role,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.User" >
    update user_test
    set user_name = #{userName,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user_name, passwd, `role`
    from user_test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_name, passwd, `role`
    from user_test
  </select>
</mapper>